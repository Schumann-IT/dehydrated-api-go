syntax = "proto3";

package rpc;

option go_package = "github.com/schumann-it/dehydrated-api-go/internal/dehydrated/plugin/rpc";

// Plugin service definition
service Plugin {
  // Initialize initializes the plugin with configuration
  rpc Initialize(InitializeRequest) returns (InitializeResponse) {}
  
  // EnrichDomainEntry enriches a domain entry with additional metadata
  rpc EnrichDomainEntry(EnrichDomainEntryRequest) returns (EnrichDomainEntryResponse) {}
  
  // Close cleans up any resources used by the plugin
  rpc Close(CloseRequest) returns (CloseResponse) {}
}

// Configuration for the plugin
message Config {
  string base_dir = 1;
  string cert_dir = 2;
}

// Request to initialize the plugin
message InitializeRequest {
  Config config = 1;
}

// Response from plugin initialization
message InitializeResponse {
  string error = 1;
}

// Domain entry data
message DomainEntry {
  string domain = 1;
  repeated string alternative_names = 2;
  bool enabled = 3;
  map<string, MetadataValue> metadata = 4;
}

// Metadata value wrapper
message MetadataValue {
  oneof value {
    CertInfo cert_info = 1;
    string string_value = 2;
    bool bool_value = 3;
    int64 int_value = 4;
  }
}

// Certificate information
message CertInfo {
  bool is_valid = 1;
  string issuer = 2;
  string subject = 3;
  string not_before = 4;
  string not_after = 5;
  string error = 6;
}

// Request to enrich a domain entry
message EnrichDomainEntryRequest {
  DomainEntry entry = 1;
}

// Response from domain entry enrichment
message EnrichDomainEntryResponse {
  DomainEntry entry = 1;
  string error = 2;
}

// Request to close the plugin
message CloseRequest {}

// Response from plugin closure
message CloseResponse {
  string error = 1;
} 
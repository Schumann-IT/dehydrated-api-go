//go:generate protoc --go_out=. --go_opt=paths=source_relative --go-grpc_out=. --go-grpc_opt=paths=source_relative plugin.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: plugin.proto

package plugin

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// DehydratedConfig contains the dehydrated configuration
type DehydratedConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// User and group settings
	User  string `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Group string `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
	// Base directories
	BaseDir       string `protobuf:"bytes,3,opt,name=base_dir,json=baseDir,proto3" json:"base_dir,omitempty"`
	CertDir       string `protobuf:"bytes,4,opt,name=cert_dir,json=certDir,proto3" json:"cert_dir,omitempty"`
	DomainsDir    string `protobuf:"bytes,5,opt,name=domains_dir,json=domainsDir,proto3" json:"domains_dir,omitempty"`
	AccountsDir   string `protobuf:"bytes,6,opt,name=accounts_dir,json=accountsDir,proto3" json:"accounts_dir,omitempty"`
	ChallengesDir string `protobuf:"bytes,7,opt,name=challenges_dir,json=challengesDir,proto3" json:"challenges_dir,omitempty"`
	ChainCache    string `protobuf:"bytes,8,opt,name=chain_cache,json=chainCache,proto3" json:"chain_cache,omitempty"`
	// File paths
	DomainsFile string `protobuf:"bytes,9,opt,name=domains_file,json=domainsFile,proto3" json:"domains_file,omitempty"`
	ConfigFile  string `protobuf:"bytes,10,opt,name=config_file,json=configFile,proto3" json:"config_file,omitempty"`
	HookScript  string `protobuf:"bytes,11,opt,name=hook_script,json=hookScript,proto3" json:"hook_script,omitempty"`
	LockFile    string `protobuf:"bytes,12,opt,name=lock_file,json=lockFile,proto3" json:"lock_file,omitempty"`
	// OpenSSL settings
	OpensslConfig string `protobuf:"bytes,13,opt,name=openssl_config,json=opensslConfig,proto3" json:"openssl_config,omitempty"`
	Openssl       string `protobuf:"bytes,14,opt,name=openssl,proto3" json:"openssl,omitempty"`
	KeySize       int32  `protobuf:"varint,15,opt,name=key_size,json=keySize,proto3" json:"key_size,omitempty"`
	// ACME settings
	Ca             string `protobuf:"bytes,16,opt,name=ca,proto3" json:"ca,omitempty"`
	OldCa          string `protobuf:"bytes,17,opt,name=old_ca,json=oldCa,proto3" json:"old_ca,omitempty"`
	AcceptTerms    bool   `protobuf:"varint,18,opt,name=accept_terms,json=acceptTerms,proto3" json:"accept_terms,omitempty"`
	Ipv4           bool   `protobuf:"varint,19,opt,name=ipv4,proto3" json:"ipv4,omitempty"`
	Ipv6           bool   `protobuf:"varint,20,opt,name=ipv6,proto3" json:"ipv6,omitempty"`
	PreferredChain string `protobuf:"bytes,21,opt,name=preferred_chain,json=preferredChain,proto3" json:"preferred_chain,omitempty"`
	Api            string `protobuf:"bytes,22,opt,name=api,proto3" json:"api,omitempty"`
	// Certificate settings
	KeyAlgo            string `protobuf:"bytes,23,opt,name=key_algo,json=keyAlgo,proto3" json:"key_algo,omitempty"`
	RenewDays          int32  `protobuf:"varint,24,opt,name=renew_days,json=renewDays,proto3" json:"renew_days,omitempty"`
	ForceRenew         bool   `protobuf:"varint,25,opt,name=force_renew,json=forceRenew,proto3" json:"force_renew,omitempty"`
	ForceValidation    bool   `protobuf:"varint,26,opt,name=force_validation,json=forceValidation,proto3" json:"force_validation,omitempty"`
	PrivateKeyRenew    bool   `protobuf:"varint,27,opt,name=private_key_renew,json=privateKeyRenew,proto3" json:"private_key_renew,omitempty"`
	PrivateKeyRollover bool   `protobuf:"varint,28,opt,name=private_key_rollover,json=privateKeyRollover,proto3" json:"private_key_rollover,omitempty"`
	// Challenge settings
	ChallengeType string `protobuf:"bytes,29,opt,name=challenge_type,json=challengeType,proto3" json:"challenge_type,omitempty"`
	WellKnownDir  string `protobuf:"bytes,30,opt,name=well_known_dir,json=wellKnownDir,proto3" json:"well_known_dir,omitempty"`
	AlpnDir       string `protobuf:"bytes,31,opt,name=alpn_dir,json=alpnDir,proto3" json:"alpn_dir,omitempty"`
	HookChain     bool   `protobuf:"varint,32,opt,name=hook_chain,json=hookChain,proto3" json:"hook_chain,omitempty"`
	// OCSP settings
	OcspMustStaple bool  `protobuf:"varint,33,opt,name=ocsp_must_staple,json=ocspMustStaple,proto3" json:"ocsp_must_staple,omitempty"`
	OcspFetch      bool  `protobuf:"varint,34,opt,name=ocsp_fetch,json=ocspFetch,proto3" json:"ocsp_fetch,omitempty"`
	OcspDays       int32 `protobuf:"varint,35,opt,name=ocsp_days,json=ocspDays,proto3" json:"ocsp_days,omitempty"`
	// Other settings
	NoLock        bool   `protobuf:"varint,36,opt,name=no_lock,json=noLock,proto3" json:"no_lock,omitempty"`
	KeepGoing     bool   `protobuf:"varint,37,opt,name=keep_going,json=keepGoing,proto3" json:"keep_going,omitempty"`
	FullChain     bool   `protobuf:"varint,38,opt,name=full_chain,json=fullChain,proto3" json:"full_chain,omitempty"`
	Ocsp          bool   `protobuf:"varint,39,opt,name=ocsp,proto3" json:"ocsp,omitempty"`
	AutoCleanup   bool   `protobuf:"varint,40,opt,name=auto_cleanup,json=autoCleanup,proto3" json:"auto_cleanup,omitempty"`
	ContactEmail  string `protobuf:"bytes,41,opt,name=contact_email,json=contactEmail,proto3" json:"contact_email,omitempty"`
	CurlOpts      string `protobuf:"bytes,42,opt,name=curl_opts,json=curlOpts,proto3" json:"curl_opts,omitempty"`
	ConfigD       string `protobuf:"bytes,43,opt,name=config_d,json=configD,proto3" json:"config_d,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DehydratedConfig) Reset() {
	*x = DehydratedConfig{}
	mi := &file_plugin_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DehydratedConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DehydratedConfig) ProtoMessage() {}

func (x *DehydratedConfig) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DehydratedConfig.ProtoReflect.Descriptor instead.
func (*DehydratedConfig) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{0}
}

func (x *DehydratedConfig) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *DehydratedConfig) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *DehydratedConfig) GetBaseDir() string {
	if x != nil {
		return x.BaseDir
	}
	return ""
}

func (x *DehydratedConfig) GetCertDir() string {
	if x != nil {
		return x.CertDir
	}
	return ""
}

func (x *DehydratedConfig) GetDomainsDir() string {
	if x != nil {
		return x.DomainsDir
	}
	return ""
}

func (x *DehydratedConfig) GetAccountsDir() string {
	if x != nil {
		return x.AccountsDir
	}
	return ""
}

func (x *DehydratedConfig) GetChallengesDir() string {
	if x != nil {
		return x.ChallengesDir
	}
	return ""
}

func (x *DehydratedConfig) GetChainCache() string {
	if x != nil {
		return x.ChainCache
	}
	return ""
}

func (x *DehydratedConfig) GetDomainsFile() string {
	if x != nil {
		return x.DomainsFile
	}
	return ""
}

func (x *DehydratedConfig) GetConfigFile() string {
	if x != nil {
		return x.ConfigFile
	}
	return ""
}

func (x *DehydratedConfig) GetHookScript() string {
	if x != nil {
		return x.HookScript
	}
	return ""
}

func (x *DehydratedConfig) GetLockFile() string {
	if x != nil {
		return x.LockFile
	}
	return ""
}

func (x *DehydratedConfig) GetOpensslConfig() string {
	if x != nil {
		return x.OpensslConfig
	}
	return ""
}

func (x *DehydratedConfig) GetOpenssl() string {
	if x != nil {
		return x.Openssl
	}
	return ""
}

func (x *DehydratedConfig) GetKeySize() int32 {
	if x != nil {
		return x.KeySize
	}
	return 0
}

func (x *DehydratedConfig) GetCa() string {
	if x != nil {
		return x.Ca
	}
	return ""
}

func (x *DehydratedConfig) GetOldCa() string {
	if x != nil {
		return x.OldCa
	}
	return ""
}

func (x *DehydratedConfig) GetAcceptTerms() bool {
	if x != nil {
		return x.AcceptTerms
	}
	return false
}

func (x *DehydratedConfig) GetIpv4() bool {
	if x != nil {
		return x.Ipv4
	}
	return false
}

func (x *DehydratedConfig) GetIpv6() bool {
	if x != nil {
		return x.Ipv6
	}
	return false
}

func (x *DehydratedConfig) GetPreferredChain() string {
	if x != nil {
		return x.PreferredChain
	}
	return ""
}

func (x *DehydratedConfig) GetApi() string {
	if x != nil {
		return x.Api
	}
	return ""
}

func (x *DehydratedConfig) GetKeyAlgo() string {
	if x != nil {
		return x.KeyAlgo
	}
	return ""
}

func (x *DehydratedConfig) GetRenewDays() int32 {
	if x != nil {
		return x.RenewDays
	}
	return 0
}

func (x *DehydratedConfig) GetForceRenew() bool {
	if x != nil {
		return x.ForceRenew
	}
	return false
}

func (x *DehydratedConfig) GetForceValidation() bool {
	if x != nil {
		return x.ForceValidation
	}
	return false
}

func (x *DehydratedConfig) GetPrivateKeyRenew() bool {
	if x != nil {
		return x.PrivateKeyRenew
	}
	return false
}

func (x *DehydratedConfig) GetPrivateKeyRollover() bool {
	if x != nil {
		return x.PrivateKeyRollover
	}
	return false
}

func (x *DehydratedConfig) GetChallengeType() string {
	if x != nil {
		return x.ChallengeType
	}
	return ""
}

func (x *DehydratedConfig) GetWellKnownDir() string {
	if x != nil {
		return x.WellKnownDir
	}
	return ""
}

func (x *DehydratedConfig) GetAlpnDir() string {
	if x != nil {
		return x.AlpnDir
	}
	return ""
}

func (x *DehydratedConfig) GetHookChain() bool {
	if x != nil {
		return x.HookChain
	}
	return false
}

func (x *DehydratedConfig) GetOcspMustStaple() bool {
	if x != nil {
		return x.OcspMustStaple
	}
	return false
}

func (x *DehydratedConfig) GetOcspFetch() bool {
	if x != nil {
		return x.OcspFetch
	}
	return false
}

func (x *DehydratedConfig) GetOcspDays() int32 {
	if x != nil {
		return x.OcspDays
	}
	return 0
}

func (x *DehydratedConfig) GetNoLock() bool {
	if x != nil {
		return x.NoLock
	}
	return false
}

func (x *DehydratedConfig) GetKeepGoing() bool {
	if x != nil {
		return x.KeepGoing
	}
	return false
}

func (x *DehydratedConfig) GetFullChain() bool {
	if x != nil {
		return x.FullChain
	}
	return false
}

func (x *DehydratedConfig) GetOcsp() bool {
	if x != nil {
		return x.Ocsp
	}
	return false
}

func (x *DehydratedConfig) GetAutoCleanup() bool {
	if x != nil {
		return x.AutoCleanup
	}
	return false
}

func (x *DehydratedConfig) GetContactEmail() string {
	if x != nil {
		return x.ContactEmail
	}
	return ""
}

func (x *DehydratedConfig) GetCurlOpts() string {
	if x != nil {
		return x.CurlOpts
	}
	return ""
}

func (x *DehydratedConfig) GetConfigD() string {
	if x != nil {
		return x.ConfigD
	}
	return ""
}

// InitializeRequest contains the configuration for the plugin
type InitializeRequest struct {
	state            protoimpl.MessageState     `protogen:"open.v1"`
	Config           map[string]*structpb.Value `protobuf:"bytes,1,rep,name=config,proto3" json:"config,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	DehydratedConfig *DehydratedConfig          `protobuf:"bytes,2,opt,name=dehydrated_config,json=dehydratedConfig,proto3" json:"dehydrated_config,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *InitializeRequest) Reset() {
	*x = InitializeRequest{}
	mi := &file_plugin_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InitializeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitializeRequest) ProtoMessage() {}

func (x *InitializeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitializeRequest.ProtoReflect.Descriptor instead.
func (*InitializeRequest) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{1}
}

func (x *InitializeRequest) GetConfig() map[string]*structpb.Value {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *InitializeRequest) GetDehydratedConfig() *DehydratedConfig {
	if x != nil {
		return x.DehydratedConfig
	}
	return nil
}

// InitializeResponse is empty as no data is needed
type InitializeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InitializeResponse) Reset() {
	*x = InitializeResponse{}
	mi := &file_plugin_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InitializeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitializeResponse) ProtoMessage() {}

func (x *InitializeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitializeResponse.ProtoReflect.Descriptor instead.
func (*InitializeResponse) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{2}
}

// GetMetadataRequest contains the domain entry to get metadata for
type GetMetadataRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Domain        string                 `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMetadataRequest) Reset() {
	*x = GetMetadataRequest{}
	mi := &file_plugin_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMetadataRequest) ProtoMessage() {}

func (x *GetMetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMetadataRequest.ProtoReflect.Descriptor instead.
func (*GetMetadataRequest) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{3}
}

func (x *GetMetadataRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

// GetMetadataResponse contains the metadata for the domain entry
type GetMetadataResponse struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	Metadata      map[string]*structpb.Value `protobuf:"bytes,1,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMetadataResponse) Reset() {
	*x = GetMetadataResponse{}
	mi := &file_plugin_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMetadataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMetadataResponse) ProtoMessage() {}

func (x *GetMetadataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMetadataResponse.ProtoReflect.Descriptor instead.
func (*GetMetadataResponse) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{4}
}

func (x *GetMetadataResponse) GetMetadata() map[string]*structpb.Value {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// CloseRequest is empty as no data is needed
type CloseRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CloseRequest) Reset() {
	*x = CloseRequest{}
	mi := &file_plugin_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseRequest) ProtoMessage() {}

func (x *CloseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseRequest.ProtoReflect.Descriptor instead.
func (*CloseRequest) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{5}
}

// CloseResponse is empty as no data is needed
type CloseResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CloseResponse) Reset() {
	*x = CloseResponse{}
	mi := &file_plugin_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseResponse) ProtoMessage() {}

func (x *CloseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseResponse.ProtoReflect.Descriptor instead.
func (*CloseResponse) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{6}
}

var File_plugin_proto protoreflect.FileDescriptor

var file_plugin_proto_rawDesc = string([]byte{
	0x0a, 0x0c, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc5, 0x0a, 0x0a, 0x10, 0x44, 0x65, 0x68, 0x79, 0x64, 0x72, 0x61,
	0x74, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x14, 0x0a,
	0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x64, 0x69, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x61, 0x73, 0x65, 0x44, 0x69, 0x72, 0x12, 0x19,
	0x0a, 0x08, 0x63, 0x65, 0x72, 0x74, 0x5f, 0x64, 0x69, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x65, 0x72, 0x74, 0x44, 0x69, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x44, 0x69, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x44, 0x69, 0x72, 0x12, 0x25, 0x0a,
	0x0e, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65,
	0x73, 0x44, 0x69, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x63, 0x61,
	0x63, 0x68, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x43, 0x61, 0x63, 0x68, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73,
	0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x73, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x68, 0x6f, 0x6f,
	0x6b, 0x5f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x68, 0x6f, 0x6f, 0x6b, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x6f,
	0x63, 0x6b, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c,
	0x6f, 0x63, 0x6b, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6f, 0x70, 0x65, 0x6e, 0x73,
	0x73, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x6f, 0x70, 0x65, 0x6e, 0x73, 0x73, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x18,
	0x0a, 0x07, 0x6f, 0x70, 0x65, 0x6e, 0x73, 0x73, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6f, 0x70, 0x65, 0x6e, 0x73, 0x73, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x63, 0x61, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x63, 0x61, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x6c, 0x64, 0x5f, 0x63, 0x61, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x6c, 0x64, 0x43, 0x61, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63,
	0x63, 0x65, 0x70, 0x74, 0x5f, 0x74, 0x65, 0x72, 0x6d, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x54, 0x65, 0x72, 0x6d, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x69, 0x70, 0x76, 0x34, 0x18, 0x13, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x69, 0x70, 0x76,
	0x34, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x70, 0x76, 0x36, 0x18, 0x14, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x04, 0x69, 0x70, 0x76, 0x36, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72,
	0x65, 0x64, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x10,
	0x0a, 0x03, 0x61, 0x70, 0x69, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x70, 0x69,
	0x12, 0x19, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x5f, 0x61, 0x6c, 0x67, 0x6f, 0x18, 0x17, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x41, 0x6c, 0x67, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x72,
	0x65, 0x6e, 0x65, 0x77, 0x5f, 0x64, 0x61, 0x79, 0x73, 0x18, 0x18, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x72, 0x65, 0x6e, 0x65, 0x77, 0x44, 0x61, 0x79, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x6f,
	0x72, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x6e, 0x65, 0x77, 0x18, 0x19, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0a, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x12, 0x29, 0x0a, 0x10, 0x66,
	0x6f, 0x72, 0x63, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x1a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x11, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x72, 0x65, 0x6e, 0x65, 0x77, 0x18, 0x1b, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x6e,
	0x65, 0x77, 0x12, 0x30, 0x0a, 0x14, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x6b, 0x65,
	0x79, 0x5f, 0x72, 0x6f, 0x6c, 0x6c, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x12, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x6f, 0x6c, 0x6c,
	0x6f, 0x76, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x68,
	0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x77,
	0x65, 0x6c, 0x6c, 0x5f, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x64, 0x69, 0x72, 0x18, 0x1e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x77, 0x65, 0x6c, 0x6c, 0x4b, 0x6e, 0x6f, 0x77, 0x6e, 0x44, 0x69,
	0x72, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x6c, 0x70, 0x6e, 0x5f, 0x64, 0x69, 0x72, 0x18, 0x1f, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x6c, 0x70, 0x6e, 0x44, 0x69, 0x72, 0x12, 0x1d, 0x0a, 0x0a,
	0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x20, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x68, 0x6f, 0x6f, 0x6b, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x28, 0x0a, 0x10, 0x6f,
	0x63, 0x73, 0x70, 0x5f, 0x6d, 0x75, 0x73, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x70, 0x6c, 0x65, 0x18,
	0x21, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x6f, 0x63, 0x73, 0x70, 0x4d, 0x75, 0x73, 0x74, 0x53,
	0x74, 0x61, 0x70, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x63, 0x73, 0x70, 0x5f, 0x66, 0x65,
	0x74, 0x63, 0x68, 0x18, 0x22, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x6f, 0x63, 0x73, 0x70, 0x46,
	0x65, 0x74, 0x63, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x63, 0x73, 0x70, 0x5f, 0x64, 0x61, 0x79,
	0x73, 0x18, 0x23, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6f, 0x63, 0x73, 0x70, 0x44, 0x61, 0x79,
	0x73, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x24, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x6e, 0x6f, 0x4c, 0x6f, 0x63, 0x6b, 0x12, 0x1d, 0x0a, 0x0a, 0x6b, 0x65,
	0x65, 0x70, 0x5f, 0x67, 0x6f, 0x69, 0x6e, 0x67, 0x18, 0x25, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x6b, 0x65, 0x65, 0x70, 0x47, 0x6f, 0x69, 0x6e, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x75, 0x6c,
	0x6c, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x26, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x66,
	0x75, 0x6c, 0x6c, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x63, 0x73, 0x70,
	0x18, 0x27, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x6f, 0x63, 0x73, 0x70, 0x12, 0x21, 0x0a, 0x0c,
	0x61, 0x75, 0x74, 0x6f, 0x5f, 0x63, 0x6c, 0x65, 0x61, 0x6e, 0x75, 0x70, 0x18, 0x28, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0b, 0x61, 0x75, 0x74, 0x6f, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x75, 0x70, 0x12,
	0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x29, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x75, 0x72, 0x6c, 0x5f, 0x6f, 0x70, 0x74,
	0x73, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x6c, 0x4f, 0x70, 0x74,
	0x73, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x64, 0x18, 0x2b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44, 0x22, 0xec, 0x01, 0x0a,
	0x11, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x3d, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x49, 0x6e, 0x69, 0x74,
	0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x45, 0x0a, 0x11, 0x64, 0x65, 0x68, 0x79, 0x64, 0x72, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x44, 0x65, 0x68, 0x79, 0x64, 0x72, 0x61, 0x74, 0x65, 0x64,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x10, 0x64, 0x65, 0x68, 0x79, 0x64, 0x72, 0x61, 0x74,
	0x65, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0x51, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2c, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x14, 0x0a, 0x12, 0x49,
	0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x2c, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x22,
	0xb1, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x70, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x53,
	0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x2c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x0e, 0x0a, 0x0c, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x0f, 0x0a, 0x0d, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x32, 0xd1, 0x01, 0x0a, 0x06, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x12,
	0x45, 0x0a, 0x0a, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x12, 0x19, 0x2e,
	0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x47,
	0x65, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1b, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x36, 0x0a, 0x05, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x14, 0x2e, 0x70, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x15, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x37, 0x5a, 0x35, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x63, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x6e, 0x2d,
	0x69, 0x74, 0x2f, 0x64, 0x65, 0x68, 0x79, 0x64, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2d, 0x61, 0x70,
	0x69, 0x2d, 0x67, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_plugin_proto_rawDescOnce sync.Once
	file_plugin_proto_rawDescData []byte
)

func file_plugin_proto_rawDescGZIP() []byte {
	file_plugin_proto_rawDescOnce.Do(func() {
		file_plugin_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_plugin_proto_rawDesc), len(file_plugin_proto_rawDesc)))
	})
	return file_plugin_proto_rawDescData
}

var file_plugin_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_plugin_proto_goTypes = []any{
	(*DehydratedConfig)(nil),    // 0: plugin.DehydratedConfig
	(*InitializeRequest)(nil),   // 1: plugin.InitializeRequest
	(*InitializeResponse)(nil),  // 2: plugin.InitializeResponse
	(*GetMetadataRequest)(nil),  // 3: plugin.GetMetadataRequest
	(*GetMetadataResponse)(nil), // 4: plugin.GetMetadataResponse
	(*CloseRequest)(nil),        // 5: plugin.CloseRequest
	(*CloseResponse)(nil),       // 6: plugin.CloseResponse
	nil,                         // 7: plugin.InitializeRequest.ConfigEntry
	nil,                         // 8: plugin.GetMetadataResponse.MetadataEntry
	(*structpb.Value)(nil),      // 9: google.protobuf.Value
}
var file_plugin_proto_depIdxs = []int32{
	7, // 0: plugin.InitializeRequest.config:type_name -> plugin.InitializeRequest.ConfigEntry
	0, // 1: plugin.InitializeRequest.dehydrated_config:type_name -> plugin.DehydratedConfig
	8, // 2: plugin.GetMetadataResponse.metadata:type_name -> plugin.GetMetadataResponse.MetadataEntry
	9, // 3: plugin.InitializeRequest.ConfigEntry.value:type_name -> google.protobuf.Value
	9, // 4: plugin.GetMetadataResponse.MetadataEntry.value:type_name -> google.protobuf.Value
	1, // 5: plugin.Plugin.Initialize:input_type -> plugin.InitializeRequest
	3, // 6: plugin.Plugin.GetMetadata:input_type -> plugin.GetMetadataRequest
	5, // 7: plugin.Plugin.Close:input_type -> plugin.CloseRequest
	2, // 8: plugin.Plugin.Initialize:output_type -> plugin.InitializeResponse
	4, // 9: plugin.Plugin.GetMetadata:output_type -> plugin.GetMetadataResponse
	6, // 10: plugin.Plugin.Close:output_type -> plugin.CloseResponse
	8, // [8:11] is the sub-list for method output_type
	5, // [5:8] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_plugin_proto_init() }
func file_plugin_proto_init() {
	if File_plugin_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_plugin_proto_rawDesc), len(file_plugin_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_plugin_proto_goTypes,
		DependencyIndexes: file_plugin_proto_depIdxs,
		MessageInfos:      file_plugin_proto_msgTypes,
	}.Build()
	File_plugin_proto = out.File
	file_plugin_proto_goTypes = nil
	file_plugin_proto_depIdxs = nil
}

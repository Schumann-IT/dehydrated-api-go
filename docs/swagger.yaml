basePath: /
definitions:
  model.CreateDomainRequest:
    description: Request to create a new domain entry
    properties:
      alias:
        description: |-
          Alias is an optional alternative identifier.
          @Description Optional alternative identifier for the domain
        example: my-domain
        type: string
      alternative_names:
        description: |-
          AlternativeNames is a list of additional domain names.
          @Description List of additional domain names (e.g., "www.example.com")
        example:
        - www.example.com
        - api.example.com
        items:
          type: string
        type: array
      comment:
        description: |-
          Comment is an optional description.
          @Description Optional description or comment for the domain
        example: Production domain for web application
        type: string
      domain:
        description: |-
          Domain is the primary domain name (required).
          @Description Primary domain name (required)
          @required
        example: example.com
        type: string
      enabled:
        description: |-
          Enabled indicates whether the domain should be active.
          @Description Whether the domain is enabled for certificate issuance
        example: true
        type: boolean
    required:
    - domain
    type: object
  model.DomainEntry:
    description: Domain configuration entry for SSL certificate management
    properties:
      alias:
        description: Certificate alias for reference.
        type: string
      alternative_names:
        description: Alternative domain names (e.g., "www.example.com").
        items:
          type: string
        type: array
      comment:
        description: Domain comment for documentation.
        type: string
      domain:
        description: Primary domain name (e.g., "example.com").
        type: string
      enabled:
        description: Whether the domain is enabled for certificate issuance.
        type: boolean
      metadata:
        allOf:
        - $ref: '#/definitions/proto.Metadata'
        description: |-
          Metadata contains additional information about the domain entry.
          @Description Additional metadata about the domain entry
    type: object
  model.DomainResponse:
    description: Response containing a single domain entry
    properties:
      data:
        allOf:
        - $ref: '#/definitions/model.DomainEntry'
        description: |-
          Data contains the domain entry if the operation was successful.
          @Description Domain entry data if the operation was successful
      error:
        description: |-
          Error contains an error message if the operation failed.
          @Description Error message if the operation failed
        example: Domain not found
        type: string
      success:
        description: |-
          Success indicates whether the operation was successful.
          @Description Whether the operation was successful
        example: true
        type: boolean
    type: object
  model.DomainsResponse:
    description: Response containing multiple domain entries
    properties:
      data:
        description: |-
          Data contains the list of domain entries if the operation was successful.
          @Description List of domain entries if the operation was successful
        items:
          $ref: '#/definitions/model.DomainEntry'
        type: array
      error:
        description: |-
          Error contains an error message if the operation failed.
          @Description Error message if the operation failed
        example: Failed to load domains
        type: string
      success:
        description: |-
          Success indicates whether the operation was successful.
          @Description Whether the operation was successful
        example: true
        type: boolean
    type: object
  model.UpdateDomainRequest:
    description: Request to update an existing domain entry
    properties:
      alias:
        description: |-
          Alias is an optional alternative identifier.
          @Description Optional alternative identifier for the domain
        example: my-domain
        type: string
      alternative_names:
        description: |-
          AlternativeNames is a list of additional domain names.
          @Description List of additional domain names (e.g., "www.example.com")
        example:
        - www.example.com
        - api.example.com
        items:
          type: string
        type: array
      comment:
        description: |-
          Comment is an optional description.
          @Description Optional description or comment for the domain
        example: Production domain for web application
        type: string
      enabled:
        description: |-
          Enabled indicates whether the domain should be active.
          @Description Whether the domain is enabled for certificate issuance
        example: true
        type: boolean
    type: object
  proto.Metadata:
    type: object
host: localhost:3000
info:
  contact: {}
  description: Authentication is optional and depends on server configuration. When
    enabled, all API endpoints require a valid JWT token in the Authorization header.
    When disabled, no authentication is required.
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  title: Dehydrated API
  version: "1.0"
paths:
  /api/v1/domains:
    get:
      consumes:
      - application/json
      description: Get a list of all configured domains
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.DomainsResponse'
        "401":
          description: Unauthorized - Invalid or missing authentication token
          schema:
            $ref: '#/definitions/model.DomainsResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.DomainsResponse'
      security:
      - BearerAuth: []
      summary: List all domains
      tags:
      - domains
    post:
      consumes:
      - application/json
      description: Create a new domain entry
      parameters:
      - description: Domain creation request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.CreateDomainRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.DomainResponse'
        "400":
          description: Bad Request - Invalid request body or domain already exists
          schema:
            $ref: '#/definitions/model.DomainResponse'
        "401":
          description: Unauthorized - Invalid or missing authentication token
          schema:
            $ref: '#/definitions/model.DomainResponse'
      security:
      - BearerAuth: []
      summary: Create a domain
      tags:
      - domains
  /api/v1/domains/{domain}:
    delete:
      consumes:
      - application/json
      description: Delete a domain entry
      parameters:
      - description: Domain name
        in: path
        name: domain
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request - Invalid domain parameter
          schema:
            $ref: '#/definitions/model.DomainResponse'
        "401":
          description: Unauthorized - Invalid or missing authentication token
          schema:
            $ref: '#/definitions/model.DomainResponse'
        "404":
          description: Not Found - Domain not found
          schema:
            $ref: '#/definitions/model.DomainResponse'
      security:
      - BearerAuth: []
      summary: Delete a domain
      tags:
      - domains
    get:
      consumes:
      - application/json
      description: Get details of a specific domain
      parameters:
      - description: Domain name
        in: path
        name: domain
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.DomainResponse'
        "400":
          description: Bad Request - Invalid domain parameter
          schema:
            $ref: '#/definitions/model.DomainResponse'
        "401":
          description: Unauthorized - Invalid or missing authentication token
          schema:
            $ref: '#/definitions/model.DomainResponse'
        "404":
          description: Not Found - Domain not found
          schema:
            $ref: '#/definitions/model.DomainResponse'
      security:
      - BearerAuth: []
      summary: Get a domain
      tags:
      - domains
    put:
      consumes:
      - application/json
      description: Update an existing domain entry
      parameters:
      - description: Domain name
        in: path
        name: domain
        required: true
        type: string
      - description: Domain update request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.UpdateDomainRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.DomainResponse'
        "400":
          description: Bad Request - Invalid request body or domain parameter
          schema:
            $ref: '#/definitions/model.DomainResponse'
        "401":
          description: Unauthorized - Invalid or missing authentication token
          schema:
            $ref: '#/definitions/model.DomainResponse'
        "404":
          description: Not Found - Domain not found
          schema:
            $ref: '#/definitions/model.DomainResponse'
      security:
      - BearerAuth: []
      summary: Update a domain
      tags:
      - domains
  /health:
    get:
      consumes:
      - application/json
      description: Check if the API is running and healthy
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.DomainsResponse'
      security:
      - BearerAuth: []
      summary: Health check
      tags:
      - health
security:
- BearerAuth: []
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and JWT token. Authentication is
      optional and depends on server configuration. When authentication is disabled,
      this header is not required.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
